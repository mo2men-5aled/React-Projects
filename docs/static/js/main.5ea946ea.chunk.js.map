{"version":3,"sources":["DisplaySeason.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","icon","winter","DisplaySeason","prop","lat","month","Season","Date","getMonth","_seasonConfig$Season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","_useState","useState","_useState2","Object","slicedToArray","setLat","_useState3","_useState4","errorMeassage","setErrorMessage","useEffect","window","navigator","geolocation","getCurrentPosition","postion","coords","latitude","err","src_DisplaySeason_0","src_Spinner","ReactDOM","render","src_App","document","querySelector"],"mappings":"kJAEMA,EAAe,CACnBC,OAAQ,CAAEC,KAAM,sBAAuBC,KAAM,OAC7CC,OAAQ,CAAEF,KAAM,qBAAsBC,KAAM,cAqB/BE,EAZO,SAACC,GACrB,IARiBC,EAAKC,EAQhBC,GARWF,EAQQD,EAAKC,KARRC,GAQa,IAAIE,MAAOC,YAPlC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAGAK,EAEPZ,EAAaS,GAA5BP,EAFsBU,EAEtBV,KAAMC,EAFgBS,EAEhBT,KACd,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAC,OAAaR,IACzBI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,uBAAAC,OAAyBd,EAAzB,aClBZe,EAAU,SAACZ,GACf,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBV,EAAKa,WAKhDD,EAAQE,aAAe,CACrBD,QAAS,eAGID,QCRTG,EAAM,WAAM,IAAAC,EACMC,mBAAS,MADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTf,EADSiB,EAAA,GACJG,EADIH,EAAA,GAAAI,EAEyBL,mBAAS,IAFlCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEME,EAFNF,EAAA,GAWhB,OAPAG,oBAAU,WACRC,OAAOC,UAAUC,YAAYC,mBAC3B,SAACC,GAAD,OAAaV,EAAOU,EAAQC,OAAOC,WACnC,SAACC,GAAD,OAAST,EAAgBS,EAAIrB,YAE9B,IAECW,IAAkBvB,EACbM,EAAAC,EAAAC,cAAA,qBAAae,IAGjBA,GAAiBvB,EACbM,EAAAC,EAAAC,cAAC0B,EAAD,CAAelC,IAAKA,IAEtBM,EAAAC,EAAAC,cAAC2B,EAAD,CAASvB,QAAQ,wCAG1BwB,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.5ea946ea.chunk.js","sourcesContent":["import \"./DisplaySeason.css\";\nimport React from \"react\";\nconst seasonConfig = {\n  summer: { text: \"let's hit the beach\", icon: \"sun\" },\n  winter: { text: \"Burr, it is frozen\", icon: \"snowflake\" },\n};\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat > 0 ? \"winter\" : \"summer\";\n  }\n};\nconst DisplaySeason = (prop) => {\n  const Season = getSeason(prop.lat, new Date().getMonth());\n  const { text, icon } = seasonConfig[Season];\n  return (\n    <div className={`display ${Season}`}>\n      <i className={`left-icon massive  ${icon} icon`} />\n      <h1>{text}</h1>\n      <i className={`right-icon massive  ${icon} icon`} />\n    </div>\n  );\n};\n\nexport default DisplaySeason;\n","import React from \"react\";\n\nconst Spinner = (prop) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{prop.message}</div>\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  message: \"Loadeing...\",\n};\n\nexport default Spinner;\n","import \"./DisplaySeason.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DisplaySeason from \"./DisplaySeason\";\nimport Spinner from \"./Spinner\";\n\nconst App = () => {\n  const [lat, setLat] = useState(null);\n  const [errorMeassage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      (postion) => setLat(postion.coords.latitude),\n      (err) => setErrorMessage(err.message)\n    );\n  }, []);\n\n  if (errorMeassage && !lat) {\n    return <div>Error: {errorMeassage}</div>;\n  }\n\n  if (!errorMeassage && lat) {\n    return <DisplaySeason lat={lat} />;\n  }\n  return <Spinner message=\"Please accept the location request\" />;\n};\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}